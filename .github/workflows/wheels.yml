name: Build and Publish Wheels

on:
  workflow_dispatch: {}
  push:
    branches:
      - master

jobs:
  build-and-publish-windows-x64:
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12', '3.13' ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install dependencies
        run: |
          python -c 'import sys; print(sys.version)'
          python -m pip install -U pip
          pip install -U setuptools wheel build
      - name: Build wheels
        run: |
          python -m build --wheel --outdir dist/ .
      - name: Publish to test.pypi.org
        if: github.event_name == 'workflow_dispatch'
        run: |
          twine upload --non-interactive --skip-existing -r https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }} dist/*
      - name: Publish to PYPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          twine upload --non-interactive --skip-existing -r https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }} dist/*

  build-and-publish-manylinux2014-x64:
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12', '3.13' ]
    name: manylinux-x64-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install dependencies
        run: |
          python${{ matrix.python-version }} -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install build

      - name: Build wheels
        run: |
          source .venv/bin/activate
          python -m build --sdist --wheel --outdir dist/ .
          auditwheel repair dist/*-linux_*.whl -w dist/
          rm -f dist/*-linux_*.whl

      - name: Publish to test.pypi.org
        if: github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          verbose: true
          repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          packages_dir: dist/
          skip_existing: true

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: dist/
          skip_existing: true
